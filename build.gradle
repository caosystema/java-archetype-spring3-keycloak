plugins {
    id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.3'
//     id 'org.graalvm.buildtools.native' version '0.9.28'
}

group = 'com.jo'
version = '0.0.1'

java {
	sourceCompatibility = '17'
	targetCompatibility = '17'
}

/* graalvmNative {
    binaries {
        main {
            buildArgs.add('--enable-preview')
        }
    }
} */

jar {
    enabled = false
}

repositories {
	mavenCentral()
}

ext {
	set('keycloakVersion', '21.1.1')
	set('postgresVersion', '42.6.0')
	set('junitJupiterVersion', '5.9.3')
	set('mockitoVersion', '5.3.1')
	set('enversVersion', '3.2.0')
	set('lombokVersion', '1.18.30')
	set('openapiVersion', '2.2.0')
}

dependencies {
    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-docker-compose'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation "org.springframework.data:spring-data-envers:${enversVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openapiVersion}"

    // Database
    implementation "org.postgresql:postgresql:${postgresVersion}"

    // Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation 'com.h2database:h2'

    runtimeOnly 'com.h2database:h2'
}

test {
	useJUnitPlatform()
}
