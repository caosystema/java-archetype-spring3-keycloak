spring:
  application.name: java-spring3-microservice
  threads.virtual.enabled: true
  datasource:
    url: jdbc:postgresql://${DB_HOST}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: ${JPA_SHOW_SQL:true}
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate.ddl-auto: none
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_HOST:http://localhost:8081}/realms/javi
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
  devtools.restart.enabled: false

springdoc:
  api-docs:
    enabled: ${SWAGGER_ENABLED:true}
  swagger-ui:
    enabled: ${SWAGGER_ENABLED:true}
    oauth:
      client-id: ${spring.application.name}
      client-secret: ${KEYCLOAK_CLIENT_SECRET}
#     path: /swagger-ui/index.html
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

server.servlet.context-path: /app

tracing.url: ${TRACING_HOST:http://localhost:4318}/v1/traces

management:
  endpoints.web.exposure.include: health,env,metrics
  tracing.sampling.probability: 1.0

logging:
  pattern:
    level: "%5p [${spring.application.name:}, traceID=%X{traceId:-}, spanID=%X{spanId:-}]"

logstash.destination: ${LOGSTASH_HOST:http://localhost:5000}

---

spring:
  config.activate.on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/db_dummy
    username: admin
    password: admin
  jpa:
    hibernate:
      ddl-auto: create
#       ddl-auto: update
    properties:
      javax:
        persistence:
          schema-generation:
            create-source: metadata
            scripts:
              action: create
              create-target: schema.sql
              create-script-source: metadata
  devtools.restart.enabled: true

springdoc:
  swagger-ui:
    oauth:
      client-secret: ${KEYCLOAK_CLIENT_SECRET:RqaTlO0d2OnBbeRuImNnbLWm5yZL66Mo}
